sg8

setcps 0.9


d1 $ fast 4
  $ jux ((range 0 0.08 $ rand) <~)
  $ stack
  [ s "bsr" # gain 1
  , s "shaker" # gain 0.8
  ]
  # bus


p "bongos"
  $ stack
  [ n "{4!2 ~   ~ 4 ~   ~ 4!2 ~   ~ 4 ~ 4 ~ ~@3}%4" # s "bo"
  , n "{0!2 0*2 0 0 0*2 0 ~@2 0*2 0 ~ 0 ~ 0*2 0 0 0}%4" # s "bc" # n 1
  ]
  # bus


let vibe = s "supervibe" # bus
  -- # lpf 600
      # octave "[0,1,2]" # gain 1.2 # distort 0.2 # sus 16

-- call
asap $ stack
  [ n "0!2 ~ ~" # s "[vc:17,clap:3]" # gain 1.1 # distort 0.1
  , note "~!2 0 ~" # vibe
  , note "~!2 0 ~" # s "biakt:72"
  ]

asap $ s "[vc:22,clap:3]"

asap $ note "~!2 0 ~" # s "biakt:72"

p "shake"
  $ slow (10/8)
  $ s "shaker*10"
  # pan  ("-1 0 0 1 0 0 -1 1 0 0" |+ 1   |/ 2)
  # gain (" 1 0 0 1 0 0  1 1 0 0" |* 0.2 |+ 0.8)

-- n: 11, 4, 7, 15 <3, 16
-- n exc: 1, 2, 3
p "percs"
  $ note "0 0"
  # s "biap"
  # n 24
  # bus

bus = bus' 0.7

strum' :: Pattern String -> Integer -> Pattern Double -> Pattern Double
strum' dir i pat = case i of
            0 -> pat
            notzero -> fastcat ((arp dir pat):(take (fromInteger i) $ repeat ("~" :: Pattern Double)))

strum = strum' "up"

-- TODO: humanize function (shuffle before strumming)
humanize i = strum' "up" i . arpWith (\events -> events)




-- Chord
asap
  -- $ note ("[-2,0,4,9]" |+ irand 4 |- irand 8)
  $ note (strum 10 "[-2,0,4,9]")
  -- $ note (strum 10 "[0,7,10,15]" |-| 5)
  -- # s "[gtr, superpiano]"
  -- # s "biam:4" # octave 3 # lpf 600 -- magic <3
  # s "biam:31" # octave "[3,4]" -- magic <3
  -- # s "biam:6" # octave 4 -- interesting, better elsewhere
  -- # s "biam:7" # octave 2
  -- # s "biam:8" # octave 3 -- evil piano from hell
  -- # s "biam:9" # octave 3 -- magic
  -- # s "biam:12" # octave 4 -- magic
  -- # s "biam:16" # octave 4 -- magic pop
  -- # s "biam:24" # octave 3 -- magic



   -- magic


p "percs"
  $ note "0 [0 -6??]"
  # gain "[1 0.8]*2"
  # s "biap"
  # n 11
  # bus
